/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the value for font size
 * Used in useTypography mixin
 */
/*
 * Return the value for line height
 * Used in useTypography mixin
 */
/*
 * Return the value for font family
 * Used in useTypography mixin
 */
/*
 * Return the value for spacing size for small screen
 * Used in useSpacing mixin
 */
/*
 * Return the value for spacing size for medium screen
 * Used in useSpacing mixin
 */
/*
 * Return the value for spacing size for large screen
 * Used in useSpacing mixin
 */
/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the value for font size
 * Used in useTypography mixin
 */
/*
 * Return the value for line height
 * Used in useTypography mixin
 */
/*
 * Return the value for font family
 * Used in useTypography mixin
 */
.sectionTitle {
  font-size: 0.9375rem;
}

@media screen {
  .selectBoardTitle {
    margin: 0.75rem 0 0 0.5rem;
  }
}
@media screen and (min-width: 64.0625rem) {
  .selectBoardTitle {
    margin: 0.75rem 0 0 0.5rem;
  }
}
@media screen and (min-width: 105.0625rem) {
  .selectBoardTitle {
    margin: 0.75rem 0 0 0.5rem;
  }
}

@media screen {
  .createBoardTitle {
    margin: 2rem 0 0.75rem 0.5rem;
  }
}
@media screen and (min-width: 64.0625rem) {
  .createBoardTitle {
    margin: 2.5rem 0 0.75rem 0.5rem;
  }
}
@media screen and (min-width: 105.0625rem) {
  .createBoardTitle {
    margin: 3rem 0 0.75rem 0.5rem;
  }
}

.boardInListContainer {
  display: "flex";
  align-items: center;
}
@media screen {
  .boardInListContainer {
    margin: 0.75rem 0 0.75rem 0;
  }
}
@media screen and (min-width: 64.0625rem) {
  .boardInListContainer {
    margin: 0.75rem 0 0.75rem 0;
  }
}
@media screen and (min-width: 105.0625rem) {
  .boardInListContainer {
    margin: 0.75rem 0 0.75rem 0;
  }
}

.boardInListContainer:hover {
  box-shadow: 0px 2px 2px 1px rgba(0, 0, 0, 0.4);
}

.stepBackContainer {
  display: flex;
  justify-content: flex-start;
}

@media screen {
  .stepBackIcon {
    margin: 0 0 0 1rem;
  }
}
@media screen and (min-width: 64.0625rem) {
  .stepBackIcon {
    margin: 0 0 0 1rem;
  }
}
@media screen and (min-width: 105.0625rem) {
  .stepBackIcon {
    margin: 0 0 0 1rem;
  }
}

.createBoardBtnContainer {
  display: "flex";
  align-items: center;
}

.createBoardBtnContainer:hover {
  box-shadow: 0px 2px 2px 1px rgba(0, 0, 0, 0.4);
}/*# sourceMappingURL=BoardCreation.module.css.map */