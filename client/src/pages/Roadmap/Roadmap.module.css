/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the value for font size
 * Used in useTypography mixin
 */
/*
 * Return the value for line height
 * Used in useTypography mixin
 */
/*
 * Return the value for font family
 * Used in useTypography mixin
 */
/*
 * Return the value for spacing size for small screen
 * Used in useSpacing mixin
 */
/*
 * Return the value for spacing size for medium screen
 * Used in useSpacing mixin
 */
/*
 * Return the value for spacing size for large screen
 * Used in useSpacing mixin
 */
/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the value for font size
 * Used in useTypography mixin
 */
/*
 * Return the value for line height
 * Used in useTypography mixin
 */
/*
 * Return the value for font family
 * Used in useTypography mixin
 */
.container {
  display: flex;
  justify-content: center;
}

.box {
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
}
@media screen {
  .box {
    margin: 0 0 1.5rem 0;
  }
}
@media screen and (min-width: 64.0625rem) {
  .box {
    margin: 0 0 1.5rem 0;
  }
}
@media screen and (min-width: 105.0625rem) {
  .box {
    margin: 0 0 1.5rem 0;
  }
}

.title {
  display: flex;
  font-weight: bold;
  justify-content: space-between;
  align-items: center;
  height: 11%;
  border-radius: 4px;
}
@media screen {
  .title {
    margin: 0.25rem 0.25rem 1rem 0.25rem;
  }
}
@media screen and (min-width: 64.0625rem) {
  .title {
    margin: 0.25rem 0.25rem 1rem 0.25rem;
  }
}
@media screen and (min-width: 105.0625rem) {
  .title {
    margin: 0.25rem 0.25rem 1rem 0.25rem;
  }
}

.featureContainer {
  overflow: scroll;
  height: 80%;
}

@media screen {
  .statusTitle {
    margin: 0 0 0 1.5rem;
  }
}
@media screen and (min-width: 64.0625rem) {
  .statusTitle {
    margin: 0 0 0 1.5rem;
  }
}
@media screen and (min-width: 105.0625rem) {
  .statusTitle {
    margin: 0 0 0 1.5rem;
  }
}

.featureNumberContainer {
  border: solid black 0.1px;
}
@media screen {
  .featureNumberContainer {
    padding: 0.25rem 0.75rem 0.25rem 0.75rem;
  }
}
@media screen and (min-width: 64.0625rem) {
  .featureNumberContainer {
    padding: 0.25rem 0.75rem 0.25rem 0.75rem;
  }
}
@media screen and (min-width: 105.0625rem) {
  .featureNumberContainer {
    padding: 0.25rem 0.75rem 0.25rem 0.75rem;
  }
}
@media screen {
  .featureNumberContainer {
    margin: 0 0.75rem 0 0;
  }
}
@media screen and (min-width: 64.0625rem) {
  .featureNumberContainer {
    margin: 0 0.75rem 0 0;
  }
}
@media screen and (min-width: 105.0625rem) {
  .featureNumberContainer {
    margin: 0 0.75rem 0 0;
  }
}

.featureContainer::-webkit-scrollbar {
  display: none;
}

.paperContainer {
  width: 23.75rem;
  height: 31.25rem;
}
@media screen {
  .paperContainer {
    margin: 0.5rem 0.5rem 0.5rem 0.5rem;
  }
}
@media screen and (min-width: 64.0625rem) {
  .paperContainer {
    margin: 0.5rem 0.5rem 0.5rem 0.5rem;
  }
}
@media screen and (min-width: 105.0625rem) {
  .paperContainer {
    margin: 0.5rem 0.5rem 0.5rem 0.5rem;
  }
}

.emptyDataContainer {
  height: 100%;
  display: flex;
  justify-content: center;
  align-items: center;
}/*# sourceMappingURL=Roadmap.module.css.map */