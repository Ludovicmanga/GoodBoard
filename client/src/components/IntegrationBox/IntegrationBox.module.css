/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the value for font size
 * Used in useTypography mixin
 */
/*
 * Return the value for line height
 * Used in useTypography mixin
 */
/*
 * Return the value for font family
 * Used in useTypography mixin
 */
/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the value for font size
 * Used in useTypography mixin
 */
/*
 * Return the value for line height
 * Used in useTypography mixin
 */
/*
 * Return the value for font family
 * Used in useTypography mixin
 */
/*
 * Return the value for spacing size for small screen
 * Used in useSpacing mixin
 */
/*
 * Return the value for spacing size for medium screen
 * Used in useSpacing mixin
 */
/*
 * Return the value for spacing size for large screen
 * Used in useSpacing mixin
 */
.container {
  cursor: pointer;
  height: 10.625rem;
}
@media screen {
  .container {
    padding: 1rem 1rem 1rem 1rem;
  }
}
@media screen and (min-width: 64.0625rem) {
  .container {
    padding: 1rem 1rem 1rem 1rem;
  }
}
@media screen and (min-width: 105.0625rem) {
  .container {
    padding: 1rem 1rem 1rem 1rem;
  }
}

.container:hover {
  box-shadow: 0px 2px 2px 1px rgba(0, 0, 0, 0.4);
}

.connectedBadgeContainer {
  display: flex;
  justify-content: flex-end;
  height: 15%;
}

.logoAndNameRowContainer {
  display: flex;
  justify-content: flex-start;
  height: 50%;
}

.logoAndNameContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  width: 30%;
}
@media screen {
  .logoAndNameContainer {
    margin: 0 0 0 1.5rem;
  }
}
@media screen and (min-width: 64.0625rem) {
  .logoAndNameContainer {
    margin: 0 0 0 1.5rem;
  }
}
@media screen and (min-width: 105.0625rem) {
  .logoAndNameContainer {
    margin: 0 0 0 1.5rem;
  }
}

@media screen {
  .logoContainer {
    margin: 0.5rem 0 0 0;
  }
}
@media screen and (min-width: 64.0625rem) {
  .logoContainer {
    margin: 0.5rem 0 0 0;
  }
}
@media screen and (min-width: 105.0625rem) {
  .logoContainer {
    margin: 0.5rem 0 0 0;
  }
}

.nameContainer {
  text-align: center;
  font-weight: 500;
}
@media screen {
  .nameContainer {
    margin: 0.5rem 0 0 0;
  }
}
@media screen and (min-width: 64.0625rem) {
  .nameContainer {
    margin: 0.5rem 0 0 0;
  }
}
@media screen and (min-width: 105.0625rem) {
  .nameContainer {
    margin: 0.5rem 0 0 0;
  }
}

.descriptionContainer {
  color: rgba(34, 36, 36, 0.45);
  height: 30%;
}
@media screen {
  .descriptionContainer {
    margin: 1rem 0 0 0;
  }
}
@media screen and (min-width: 64.0625rem) {
  .descriptionContainer {
    margin: 1rem 0 0 0;
  }
}
@media screen and (min-width: 105.0625rem) {
  .descriptionContainer {
    margin: 1rem 0 0 0;
  }
}/*# sourceMappingURL=IntegrationBox.module.css.map */