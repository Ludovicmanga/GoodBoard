/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the value for font size
 * Used in useTypography mixin
 */
/*
 * Return the value for line height
 * Used in useTypography mixin
 */
/*
 * Return the value for font family
 * Used in useTypography mixin
 */
/*
 * Return the value for spacing size for small screen
 * Used in useSpacing mixin
 */
/*
 * Return the value for spacing size for medium screen
 * Used in useSpacing mixin
 */
/*
 * Return the value for spacing size for large screen
 * Used in useSpacing mixin
 */
/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the value for font size
 * Used in useTypography mixin
 */
/*
 * Return the value for line height
 * Used in useTypography mixin
 */
/*
 * Return the value for font family
 * Used in useTypography mixin
 */
.container {
  height: 10.3125rem;
  cursor: pointer;
}
@media screen {
  .container {
    margin: 0 0.5rem 0.5rem 0.5rem;
  }
}
@media screen and (min-width: 64.0625rem) {
  .container {
    margin: 0 0.5rem 0.5rem 0.5rem;
  }
}
@media screen and (min-width: 105.0625rem) {
  .container {
    margin: 0 0.5rem 0.5rem 0.5rem;
  }
}

@media screen {
  .cardContent {
    padding: 0.75rem 1rem 0.75rem 1rem;
  }
}
@media screen and (min-width: 64.0625rem) {
  .cardContent {
    padding: 0.75rem 1rem 0.75rem 1rem;
  }
}
@media screen and (min-width: 105.0625rem) {
  .cardContent {
    padding: 0.75rem 1rem 0.75rem 1rem;
  }
}

.topContent {
  display: flex;
  justify-content: flex-start;
  align-items: center;
  height: 10%;
}

.featureType {
  font-size: 0.6875rem;
  line-height: 1.1875rem;
}
@media screen and (max-width: 49.9375rem) {
  .featureType {
    font-size: 0.6875rem;
    line-height: 1.1875rem;
  }
}

.title {
  font-weight: bold;
  height: 15%;
}
@media screen {
  .title {
    margin: 0.25rem 0 0.5rem 0;
  }
}
@media screen and (min-width: 64.0625rem) {
  .title {
    margin: 0.25rem 0 0.5rem 0;
  }
}
@media screen and (min-width: 105.0625rem) {
  .title {
    margin: 0.25rem 0 0.5rem 0;
  }
}

.detailsContainer {
  overflow: hidden;
  font-size: 0.875rem;
  height: 30%;
}
@media screen and (max-width: 49.9375rem) {
  .detailsContainer {
    font-size: 0.875rem;
  }
}

.bottomContent {
  display: flex;
  justify-content: flex-end;
}

@media screen {
  .divider {
    margin: 1.5rem 0 1rem 0;
  }
}
@media screen and (min-width: 64.0625rem) {
  .divider {
    margin: 1.5rem 0 1rem 0;
  }
}
@media screen and (min-width: 105.0625rem) {
  .divider {
    margin: 1.5rem 0 1rem 0;
  }
}

@media screen {
  .dotIcon {
    margin: 0 0.25rem 0 0;
  }
}
@media screen and (min-width: 64.0625rem) {
  .dotIcon {
    margin: 0 0.25rem 0 0;
  }
}
@media screen and (min-width: 105.0625rem) {
  .dotIcon {
    margin: 0 0.25rem 0 0;
  }
}/*# sourceMappingURL=RoadMapFeature.module.css.map */