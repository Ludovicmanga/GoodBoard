/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the value for font size
 * Used in useTypography mixin
 */
/*
 * Return the value for line height
 * Used in useTypography mixin
 */
/*
 * Return the value for font family
 * Used in useTypography mixin
 */
/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the rem of a pixel's value
 *
 * Sample: pxToRem(50)
 * Result: 3.125rem
 */
/*
 * Return the percent ratio from width and height
 *
 * Sample: ratio(16, 9)
 * Result: 56.25%
 */
/*
 * Return the value for font size
 * Used in useTypography mixin
 */
/*
 * Return the value for line height
 * Used in useTypography mixin
 */
/*
 * Return the value for font family
 * Used in useTypography mixin
 */
/*
 * Return the value for spacing size for small screen
 * Used in useSpacing mixin
 */
/*
 * Return the value for spacing size for medium screen
 * Used in useSpacing mixin
 */
/*
 * Return the value for spacing size for large screen
 * Used in useSpacing mixin
 */
.modalContentContainer {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 37.5rem;
  border: 0.5px solid #000;
  border-radius: 8px;
  box-shadow: 24px;
  overflow-y: auto;
  height: 600px;
}
@media screen {
  .modalContentContainer {
    padding: 1.5rem 2rem 2rem 2rem;
  }
}
@media screen and (min-width: 64.0625rem) {
  .modalContentContainer {
    padding: 1.5rem 2.5rem 2.5rem 2.5rem;
  }
}
@media screen and (min-width: 105.0625rem) {
  .modalContentContainer {
    padding: 1.5rem 3rem 3rem 3rem;
  }
}

.modalContentContainer::-webkit-scrollbar {
  display: none;
}

@media screen {
  .boardBox {
    margin: 1rem 0 1rem 0;
  }
}
@media screen and (min-width: 64.0625rem) {
  .boardBox {
    margin: 1rem 0 1rem 0;
  }
}
@media screen and (min-width: 105.0625rem) {
  .boardBox {
    margin: 1rem 0 1rem 0;
  }
}
@media screen {
  .boardBox {
    padding: 1rem 1rem 1rem 1rem;
  }
}
@media screen and (min-width: 64.0625rem) {
  .boardBox {
    padding: 1rem 1rem 1rem 1rem;
  }
}
@media screen and (min-width: 105.0625rem) {
  .boardBox {
    padding: 1rem 1rem 1rem 1rem;
  }
}

.AccordionSummaryContainer {
  display: flex;
}

.boardImg {
  border-radius: 10px;
}

.boardNameContainer {
  display: flex;
  align-items: center;
  justify-content: center;
}
@media screen {
  .boardNameContainer {
    padding: 0 0 0 1.5rem;
  }
}
@media screen and (min-width: 64.0625rem) {
  .boardNameContainer {
    padding: 0 0 0 1.5rem;
  }
}
@media screen and (min-width: 105.0625rem) {
  .boardNameContainer {
    padding: 0 0 0 1.5rem;
  }
}

.detailBoxContainer {
  display: flex;
}

.detailBoxName {
  display: flex;
  justify-content: center;
  align-items: center;
}
@media screen {
  .detailBoxName {
    margin: 0 0 0 1rem;
  }
}
@media screen and (min-width: 64.0625rem) {
  .detailBoxName {
    margin: 0 0 0 1rem;
  }
}
@media screen and (min-width: 105.0625rem) {
  .detailBoxName {
    margin: 0 0 0 1rem;
  }
}

.checkBox {
  display: flex;
  justify-content: center;
  align-items: center;
}/*# sourceMappingURL=TrelloBoardsListModal.module.css.map */